<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAATLSURBVFhHtVddTJtlFP5mGIUlm1c03m1Dw37AuWZlXpho
        zG6IkYg/M8ZL450x/mRsA0oLeIGSZbLpiJvT1M0sarwwtS2lrPtxA51ijPSX+MMqZBOmDtiYukkfz/O2
        30cDbf2a1ZM8Od85nO+8z3vO+V7eapqmlT3QdafX3lUOW8cdsLnS2OpagfucmgKfdT9jGMt3+K7gtmV1
        fZcFxUq9kJCVV9/26pKgiruirN+toaYljXXNmsFpvTzTt0FQLTEUW8cKEqgqBQErS0xZKwuNjHvw7bgP
        Z2IfqgU3tWr4InFC4Wz8uEHM5tJIwFoSAuyzLtz5Cx/Z8OLHdgwm3NjqLMMrn94v9jawErrY5J2SEdiS
        RYAL1LZpaPY8jFc/exDeWJ8MYDnqHIuLM6ZOYiyOYUEQljY/KhR8StPO56t0+LHG6cddLp8xxNalBJjc
        7qrE3kADmv078Em4B5ulFdlSs8QudohJQh9ia3YLqndp+GDUgfYzjah3rlK6JdQA9/dt2CwzQSKsxsZ2
        mZuR54AvnwGGdwoeQ4tvSum0ncM39BRw7lHFlZXQh9gYwmrpcV/4JTiGGuEabkLXhSdR71oF51ATHOca
        cSSyC9ucFgxceh91rpXAd88DXz8LXHha9ONwDVxRWtm5fF+JX3JT2Cp9hha/Atl9zV7ZnWBTZre1suNa
        eXZ+8wRcIztxKP4ytndWqs9w38l5dPovocM/gdf6k+gOXFSadi6f0zsBh+fndAVkXpYRKNTHe6Q6bMG9
        Mh82npLtGpL/ALHrQPQaMHYD6PbGlaadyxeeA0YFaQLeRQL2zvJiZwgbhcz437LQLBCZTSEhRLo9EaVp
        5/KNXl3A6Ewq3YLWRQJV2/esOW/vXKnOfX4RW2R3HDbOxFppyzoBn4m7eVru0dDU+wgu/gUkZEfxuRR+
        mAfe+DyiNO1cvujMghBeToDnea3gIcGODBrKHSOK6a8SPyWYzkDGDL8L3g4mMXkTGJeSE79INfb7o0rn
        8/0k5H4ULK0A/6ORBM91Hq3Ehoq2kArskb7u88UlecJAb2AMB4NjeLM/Jn+LKOzvj+LAgMSJzufr8Ybx
        uie8bAZyHefWilafCkz+KbsTTEi5iUnB5VtAbyCuNG2zPuZhvqUVyEPAmyYg5U3OpwTUQkbsy1LmXl9U
        adpmfSqPxBdFYJK7v5EyQHtKen9A+k1N26yPeRhbFIFpKfO0LHRFNPGbgF9SXzCmNG2zPuZhPnME5KCg
        HOyP4K1ABIcCUQPvDMbxbigBat1vxsc8zKcIZB1EBWdgdgGYlRNPacGcgG08MhhTmrZZn57HXAXkpKLM
        SMn+uJkycFXs61L6wwNRpWmb9TEP8xVF4Bp3fytlYE5sztHhYFRp2mZ9zMN8RRGQuYF8bQa4AR6m7lMx
        pWmb9TEP85kjkBnCo4NRHD0ZM/CePLtPJ3D87JjStM36VB7JV9QQMpg71ZHZAI6diuuPhv4vX/rfkMkK
        WDJDyHC2TYcMvRJ3KKY0bbO+TPvVe8xf6FZt5YWhkBwLpUuZLWZ9fCf7QpLzHOCt9f+UzK047w+bKuvu
        E+cZRKYsVzZ4m+FJRq37zfqYj3mZv9BPu1yXFP2yUgrNyw8vQXl/3Oa6pOiXlVJoXn64eNm/gKRiIzAY
        2AgAAAAASUVORK5CYII=
</value>
  </data>
</root>